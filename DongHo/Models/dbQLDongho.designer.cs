#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DongHo.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DongHo")]
	public partial class dbQLDonghoDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertChiTietDonHang(ChiTietDonHang instance);
    partial void UpdateChiTietDonHang(ChiTietDonHang instance);
    partial void DeleteChiTietDonHang(ChiTietDonHang instance);
    partial void InsertLoaiSP(LoaiSP instance);
    partial void UpdateLoaiSP(LoaiSP instance);
    partial void DeleteLoaiSP(LoaiSP instance);
    partial void InsertNhaSX(NhaSX instance);
    partial void UpdateNhaSX(NhaSX instance);
    partial void DeleteNhaSX(NhaSX instance);
    partial void InsertKhachHang(KhachHang instance);
    partial void UpdateKhachHang(KhachHang instance);
    partial void DeleteKhachHang(KhachHang instance);
    partial void InsertAdmin(Admin instance);
    partial void UpdateAdmin(Admin instance);
    partial void DeleteAdmin(Admin instance);
    partial void InsertDonHang(DonHang instance);
    partial void UpdateDonHang(DonHang instance);
    partial void DeleteDonHang(DonHang instance);
    partial void InsertGioitinh(Gioitinh instance);
    partial void UpdateGioitinh(Gioitinh instance);
    partial void DeleteGioitinh(Gioitinh instance);
    partial void InsertSanPham(SanPham instance);
    partial void UpdateSanPham(SanPham instance);
    partial void DeleteSanPham(SanPham instance);
    partial void InsertPhieuNhap(PhieuNhap instance);
    partial void UpdatePhieuNhap(PhieuNhap instance);
    partial void DeletePhieuNhap(PhieuNhap instance);
    partial void InsertChiTietPhieuNhap(ChiTietPhieuNhap instance);
    partial void UpdateChiTietPhieuNhap(ChiTietPhieuNhap instance);
    partial void DeleteChiTietPhieuNhap(ChiTietPhieuNhap instance);
    #endregion
		
		public dbQLDonghoDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DongHoConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLDonghoDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLDonghoDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLDonghoDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLDonghoDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ChiTietDonHang> ChiTietDonHangs
		{
			get
			{
				return this.GetTable<ChiTietDonHang>();
			}
		}
		
		public System.Data.Linq.Table<LoaiSP> LoaiSPs
		{
			get
			{
				return this.GetTable<LoaiSP>();
			}
		}
		
		public System.Data.Linq.Table<NhaSX> NhaSXes
		{
			get
			{
				return this.GetTable<NhaSX>();
			}
		}
		
		public System.Data.Linq.Table<KhachHang> KhachHangs
		{
			get
			{
				return this.GetTable<KhachHang>();
			}
		}
		
		public System.Data.Linq.Table<Admin> Admins
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<DonHang> DonHangs
		{
			get
			{
				return this.GetTable<DonHang>();
			}
		}
		
		public System.Data.Linq.Table<Gioitinh> Gioitinhs
		{
			get
			{
				return this.GetTable<Gioitinh>();
			}
		}
		
		public System.Data.Linq.Table<SanPham> SanPhams
		{
			get
			{
				return this.GetTable<SanPham>();
			}
		}
		
		public System.Data.Linq.Table<PhieuNhap> PhieuNhaps
		{
			get
			{
				return this.GetTable<PhieuNhap>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietPhieuNhap> ChiTietPhieuNhaps
		{
			get
			{
				return this.GetTable<ChiTietPhieuNhap>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietDonHang")]
	public partial class ChiTietDonHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Masp;
		
		private int _Madh;
		
		private System.Nullable<int> _Soluong;
		
		private System.Nullable<int> _Dongia;
		
		private EntityRef<DonHang> _DonHang;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaspChanging(int value);
    partial void OnMaspChanged();
    partial void OnMadhChanging(int value);
    partial void OnMadhChanged();
    partial void OnSoluongChanging(System.Nullable<int> value);
    partial void OnSoluongChanged();
    partial void OnDongiaChanging(System.Nullable<int> value);
    partial void OnDongiaChanged();
    #endregion
		
		public ChiTietDonHang()
		{
			this._DonHang = default(EntityRef<DonHang>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Masp", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Masp
		{
			get
			{
				return this._Masp;
			}
			set
			{
				if ((this._Masp != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaspChanging(value);
					this.SendPropertyChanging();
					this._Masp = value;
					this.SendPropertyChanged("Masp");
					this.OnMaspChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Madh", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Madh
		{
			get
			{
				return this._Madh;
			}
			set
			{
				if ((this._Madh != value))
				{
					if (this._DonHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMadhChanging(value);
					this.SendPropertyChanging();
					this._Madh = value;
					this.SendPropertyChanged("Madh");
					this.OnMadhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Soluong", DbType="Int")]
		public System.Nullable<int> Soluong
		{
			get
			{
				return this._Soluong;
			}
			set
			{
				if ((this._Soluong != value))
				{
					this.OnSoluongChanging(value);
					this.SendPropertyChanging();
					this._Soluong = value;
					this.SendPropertyChanged("Soluong");
					this.OnSoluongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dongia", DbType="Int")]
		public System.Nullable<int> Dongia
		{
			get
			{
				return this._Dongia;
			}
			set
			{
				if ((this._Dongia != value))
				{
					this.OnDongiaChanging(value);
					this.SendPropertyChanging();
					this._Dongia = value;
					this.SendPropertyChanged("Dongia");
					this.OnDongiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_ChiTietDonHang", Storage="_DonHang", ThisKey="Madh", OtherKey="Madh", IsForeignKey=true)]
		public DonHang DonHang
		{
			get
			{
				return this._DonHang.Entity;
			}
			set
			{
				DonHang previousValue = this._DonHang.Entity;
				if (((previousValue != value) 
							|| (this._DonHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonHang.Entity = null;
						previousValue.ChiTietDonHangs.Remove(this);
					}
					this._DonHang.Entity = value;
					if ((value != null))
					{
						value.ChiTietDonHangs.Add(this);
						this._Madh = value.Madh;
					}
					else
					{
						this._Madh = default(int);
					}
					this.SendPropertyChanged("DonHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietDonHang", Storage="_SanPham", ThisKey="Masp", OtherKey="Masp", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.ChiTietDonHangs.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.ChiTietDonHangs.Add(this);
						this._Masp = value.Masp;
					}
					else
					{
						this._Masp = default(int);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiSP")]
	public partial class LoaiSP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Maloai;
		
		private string _Tenloai;
		
		private EntitySet<SanPham> _SanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaloaiChanging(int value);
    partial void OnMaloaiChanged();
    partial void OnTenloaiChanging(string value);
    partial void OnTenloaiChanged();
    #endregion
		
		public LoaiSP()
		{
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Maloai", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Maloai
		{
			get
			{
				return this._Maloai;
			}
			set
			{
				if ((this._Maloai != value))
				{
					this.OnMaloaiChanging(value);
					this.SendPropertyChanging();
					this._Maloai = value;
					this.SendPropertyChanged("Maloai");
					this.OnMaloaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tenloai", DbType="NVarChar(100)")]
		public string Tenloai
		{
			get
			{
				return this._Tenloai;
			}
			set
			{
				if ((this._Tenloai != value))
				{
					this.OnTenloaiChanging(value);
					this.SendPropertyChanging();
					this._Tenloai = value;
					this.SendPropertyChanged("Tenloai");
					this.OnTenloaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiSP_SanPham", Storage="_SanPhams", ThisKey="Maloai", OtherKey="Maloai")]
		public EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.LoaiSP = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.LoaiSP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhaSX")]
	public partial class NhaSX : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Mansx;
		
		private string _Tennsx;
		
		private EntitySet<SanPham> _SanPhams;
		
		private EntitySet<PhieuNhap> _PhieuNhaps;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMansxChanging(int value);
    partial void OnMansxChanged();
    partial void OnTennsxChanging(string value);
    partial void OnTennsxChanged();
    #endregion
		
		public NhaSX()
		{
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			this._PhieuNhaps = new EntitySet<PhieuNhap>(new Action<PhieuNhap>(this.attach_PhieuNhaps), new Action<PhieuNhap>(this.detach_PhieuNhaps));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mansx", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Mansx
		{
			get
			{
				return this._Mansx;
			}
			set
			{
				if ((this._Mansx != value))
				{
					this.OnMansxChanging(value);
					this.SendPropertyChanging();
					this._Mansx = value;
					this.SendPropertyChanged("Mansx");
					this.OnMansxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tennsx", DbType="NVarChar(100)")]
		public string Tennsx
		{
			get
			{
				return this._Tennsx;
			}
			set
			{
				if ((this._Tennsx != value))
				{
					this.OnTennsxChanging(value);
					this.SendPropertyChanging();
					this._Tennsx = value;
					this.SendPropertyChanged("Tennsx");
					this.OnTennsxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaSX_SanPham", Storage="_SanPhams", ThisKey="Mansx", OtherKey="Mansx")]
		public EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaSX_PhieuNhap", Storage="_PhieuNhaps", ThisKey="Mansx", OtherKey="Mansx")]
		public EntitySet<PhieuNhap> PhieuNhaps
		{
			get
			{
				return this._PhieuNhaps;
			}
			set
			{
				this._PhieuNhaps.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.NhaSX = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.NhaSX = null;
		}
		
		private void attach_PhieuNhaps(PhieuNhap entity)
		{
			this.SendPropertyChanging();
			entity.NhaSX = this;
		}
		
		private void detach_PhieuNhaps(PhieuNhap entity)
		{
			this.SendPropertyChanging();
			entity.NhaSX = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHang")]
	public partial class KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Makh;
		
		private string _Tenkh;
		
		private string _Dienthoai;
		
		private string _Diachi;
		
		private string _Taikhoan;
		
		private string _Matkhau;
		
		private string _Email;
		
		private System.Nullable<System.DateTime> _Ngaysinh;
		
		private EntitySet<DonHang> _DonHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMakhChanging(int value);
    partial void OnMakhChanged();
    partial void OnTenkhChanging(string value);
    partial void OnTenkhChanged();
    partial void OnDienthoaiChanging(string value);
    partial void OnDienthoaiChanged();
    partial void OnDiachiChanging(string value);
    partial void OnDiachiChanged();
    partial void OnTaikhoanChanging(string value);
    partial void OnTaikhoanChanged();
    partial void OnMatkhauChanging(string value);
    partial void OnMatkhauChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnNgaysinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaysinhChanged();
    #endregion
		
		public KhachHang()
		{
			this._DonHangs = new EntitySet<DonHang>(new Action<DonHang>(this.attach_DonHangs), new Action<DonHang>(this.detach_DonHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Makh", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Makh
		{
			get
			{
				return this._Makh;
			}
			set
			{
				if ((this._Makh != value))
				{
					this.OnMakhChanging(value);
					this.SendPropertyChanging();
					this._Makh = value;
					this.SendPropertyChanged("Makh");
					this.OnMakhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tenkh", DbType="NVarChar(70)")]
		public string Tenkh
		{
			get
			{
				return this._Tenkh;
			}
			set
			{
				if ((this._Tenkh != value))
				{
					this.OnTenkhChanging(value);
					this.SendPropertyChanging();
					this._Tenkh = value;
					this.SendPropertyChanged("Tenkh");
					this.OnTenkhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dienthoai", DbType="VarChar(100)")]
		public string Dienthoai
		{
			get
			{
				return this._Dienthoai;
			}
			set
			{
				if ((this._Dienthoai != value))
				{
					this.OnDienthoaiChanging(value);
					this.SendPropertyChanging();
					this._Dienthoai = value;
					this.SendPropertyChanged("Dienthoai");
					this.OnDienthoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diachi", DbType="NVarChar(100)")]
		public string Diachi
		{
			get
			{
				return this._Diachi;
			}
			set
			{
				if ((this._Diachi != value))
				{
					this.OnDiachiChanging(value);
					this.SendPropertyChanging();
					this._Diachi = value;
					this.SendPropertyChanged("Diachi");
					this.OnDiachiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Taikhoan", DbType="VarChar(60)")]
		public string Taikhoan
		{
			get
			{
				return this._Taikhoan;
			}
			set
			{
				if ((this._Taikhoan != value))
				{
					this.OnTaikhoanChanging(value);
					this.SendPropertyChanging();
					this._Taikhoan = value;
					this.SendPropertyChanged("Taikhoan");
					this.OnTaikhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Matkhau", DbType="VarChar(100)")]
		public string Matkhau
		{
			get
			{
				return this._Matkhau;
			}
			set
			{
				if ((this._Matkhau != value))
				{
					this.OnMatkhauChanging(value);
					this.SendPropertyChanging();
					this._Matkhau = value;
					this.SendPropertyChanged("Matkhau");
					this.OnMatkhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaysinh", DbType="Date")]
		public System.Nullable<System.DateTime> Ngaysinh
		{
			get
			{
				return this._Ngaysinh;
			}
			set
			{
				if ((this._Ngaysinh != value))
				{
					this.OnNgaysinhChanging(value);
					this.SendPropertyChanging();
					this._Ngaysinh = value;
					this.SendPropertyChanged("Ngaysinh");
					this.OnNgaysinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DonHang", Storage="_DonHangs", ThisKey="Makh", OtherKey="Makh")]
		public EntitySet<DonHang> DonHangs
		{
			get
			{
				return this._DonHangs;
			}
			set
			{
				this._DonHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DonHangs(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_DonHangs(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
	public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Matkhau;
		
		private string _Hoten;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnMatkhauChanging(string value);
    partial void OnMatkhauChanged();
    partial void OnHotenChanging(string value);
    partial void OnHotenChanged();
    #endregion
		
		public Admin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Matkhau", DbType="VarChar(50)")]
		public string Matkhau
		{
			get
			{
				return this._Matkhau;
			}
			set
			{
				if ((this._Matkhau != value))
				{
					this.OnMatkhauChanging(value);
					this.SendPropertyChanging();
					this._Matkhau = value;
					this.SendPropertyChanged("Matkhau");
					this.OnMatkhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hoten", DbType="NVarChar(50)")]
		public string Hoten
		{
			get
			{
				return this._Hoten;
			}
			set
			{
				if ((this._Hoten != value))
				{
					this.OnHotenChanging(value);
					this.SendPropertyChanging();
					this._Hoten = value;
					this.SendPropertyChanged("Hoten");
					this.OnHotenChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DonHang")]
	public partial class DonHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Madh;
		
		private int _Makh;
		
		private System.Nullable<System.DateTime> _Ngaydat;
		
		private System.Nullable<System.DateTime> _Ngaygiao;
		
		private System.Nullable<bool> _Thanhtoan;
		
		private System.Nullable<bool> _Tinhtrang;
		
		private string _Diachigiao;
		
		private EntitySet<ChiTietDonHang> _ChiTietDonHangs;
		
		private EntityRef<KhachHang> _KhachHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMadhChanging(int value);
    partial void OnMadhChanged();
    partial void OnMakhChanging(int value);
    partial void OnMakhChanged();
    partial void OnNgaydatChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaydatChanged();
    partial void OnNgaygiaoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaygiaoChanged();
    partial void OnThanhtoanChanging(System.Nullable<bool> value);
    partial void OnThanhtoanChanged();
    partial void OnTinhtrangChanging(System.Nullable<bool> value);
    partial void OnTinhtrangChanged();
    partial void OnDiachigiaoChanging(string value);
    partial void OnDiachigiaoChanged();
    #endregion
		
		public DonHang()
		{
			this._ChiTietDonHangs = new EntitySet<ChiTietDonHang>(new Action<ChiTietDonHang>(this.attach_ChiTietDonHangs), new Action<ChiTietDonHang>(this.detach_ChiTietDonHangs));
			this._KhachHang = default(EntityRef<KhachHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Madh", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Madh
		{
			get
			{
				return this._Madh;
			}
			set
			{
				if ((this._Madh != value))
				{
					this.OnMadhChanging(value);
					this.SendPropertyChanging();
					this._Madh = value;
					this.SendPropertyChanged("Madh");
					this.OnMadhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Makh", DbType="Int NOT NULL")]
		public int Makh
		{
			get
			{
				return this._Makh;
			}
			set
			{
				if ((this._Makh != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMakhChanging(value);
					this.SendPropertyChanging();
					this._Makh = value;
					this.SendPropertyChanged("Makh");
					this.OnMakhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaydat", DbType="DateTime")]
		public System.Nullable<System.DateTime> Ngaydat
		{
			get
			{
				return this._Ngaydat;
			}
			set
			{
				if ((this._Ngaydat != value))
				{
					this.OnNgaydatChanging(value);
					this.SendPropertyChanging();
					this._Ngaydat = value;
					this.SendPropertyChanged("Ngaydat");
					this.OnNgaydatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaygiao", DbType="DateTime")]
		public System.Nullable<System.DateTime> Ngaygiao
		{
			get
			{
				return this._Ngaygiao;
			}
			set
			{
				if ((this._Ngaygiao != value))
				{
					this.OnNgaygiaoChanging(value);
					this.SendPropertyChanging();
					this._Ngaygiao = value;
					this.SendPropertyChanged("Ngaygiao");
					this.OnNgaygiaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thanhtoan", DbType="Bit")]
		public System.Nullable<bool> Thanhtoan
		{
			get
			{
				return this._Thanhtoan;
			}
			set
			{
				if ((this._Thanhtoan != value))
				{
					this.OnThanhtoanChanging(value);
					this.SendPropertyChanging();
					this._Thanhtoan = value;
					this.SendPropertyChanged("Thanhtoan");
					this.OnThanhtoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tinhtrang", DbType="Bit")]
		public System.Nullable<bool> Tinhtrang
		{
			get
			{
				return this._Tinhtrang;
			}
			set
			{
				if ((this._Tinhtrang != value))
				{
					this.OnTinhtrangChanging(value);
					this.SendPropertyChanging();
					this._Tinhtrang = value;
					this.SendPropertyChanged("Tinhtrang");
					this.OnTinhtrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diachigiao", DbType="NVarChar(MAX)")]
		public string Diachigiao
		{
			get
			{
				return this._Diachigiao;
			}
			set
			{
				if ((this._Diachigiao != value))
				{
					this.OnDiachigiaoChanging(value);
					this.SendPropertyChanging();
					this._Diachigiao = value;
					this.SendPropertyChanged("Diachigiao");
					this.OnDiachigiaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_ChiTietDonHang", Storage="_ChiTietDonHangs", ThisKey="Madh", OtherKey="Madh")]
		public EntitySet<ChiTietDonHang> ChiTietDonHangs
		{
			get
			{
				return this._ChiTietDonHangs;
			}
			set
			{
				this._ChiTietDonHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DonHang", Storage="_KhachHang", ThisKey="Makh", OtherKey="Makh", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.DonHangs.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.DonHangs.Add(this);
						this._Makh = value.Makh;
					}
					else
					{
						this._Makh = default(int);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietDonHangs(ChiTietDonHang entity)
		{
			this.SendPropertyChanging();
			entity.DonHang = this;
		}
		
		private void detach_ChiTietDonHangs(ChiTietDonHang entity)
		{
			this.SendPropertyChanging();
			entity.DonHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Gioitinh")]
	public partial class Gioitinh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Namnu;
		
		private string _Gioitinh1;
		
		private EntitySet<SanPham> _SanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNamnuChanging(int value);
    partial void OnNamnuChanged();
    partial void OnGioitinh1Changing(string value);
    partial void OnGioitinh1Changed();
    #endregion
		
		public Gioitinh()
		{
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Namnu", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Namnu
		{
			get
			{
				return this._Namnu;
			}
			set
			{
				if ((this._Namnu != value))
				{
					this.OnNamnuChanging(value);
					this.SendPropertyChanging();
					this._Namnu = value;
					this.SendPropertyChanged("Namnu");
					this.OnNamnuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gioitinh1", DbType="NVarChar(10)")]
		public string Gioitinh1
		{
			get
			{
				return this._Gioitinh1;
			}
			set
			{
				if ((this._Gioitinh1 != value))
				{
					this.OnGioitinh1Changing(value);
					this.SendPropertyChanging();
					this._Gioitinh1 = value;
					this.SendPropertyChanged("Gioitinh1");
					this.OnGioitinh1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gioitinh_SanPham", Storage="_SanPhams", ThisKey="Namnu", OtherKey="Namnu")]
		public EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.Gioitinh = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.Gioitinh = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SanPham")]
	public partial class SanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Masp;
		
		private string _Tensp;
		
		private System.Nullable<double> _Gia;
		
		private string _Mota;
		
		private System.Nullable<int> _Soluong;
		
		private string _Anh;
		
		private System.Nullable<System.DateTime> _Ngaydang;
		
		private int _Maloai;
		
		private int _Mansx;
		
		private System.Nullable<int> _Namnu;
		
		private string _Thanhtoan;
		
		private EntitySet<ChiTietDonHang> _ChiTietDonHangs;
		
		private EntitySet<ChiTietPhieuNhap> _ChiTietPhieuNhaps;
		
		private EntityRef<LoaiSP> _LoaiSP;
		
		private EntityRef<NhaSX> _NhaSX;
		
		private EntityRef<Gioitinh> _Gioitinh;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaspChanging(int value);
    partial void OnMaspChanged();
    partial void OnTenspChanging(string value);
    partial void OnTenspChanged();
    partial void OnGiaChanging(System.Nullable<double> value);
    partial void OnGiaChanged();
    partial void OnMotaChanging(string value);
    partial void OnMotaChanged();
    partial void OnSoluongChanging(System.Nullable<int> value);
    partial void OnSoluongChanged();
    partial void OnAnhChanging(string value);
    partial void OnAnhChanged();
    partial void OnNgaydangChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaydangChanged();
    partial void OnMaloaiChanging(int value);
    partial void OnMaloaiChanged();
    partial void OnMansxChanging(int value);
    partial void OnMansxChanged();
    partial void OnNamnuChanging(System.Nullable<int> value);
    partial void OnNamnuChanged();
    partial void OnThanhtoanChanging(string value);
    partial void OnThanhtoanChanged();
    #endregion
		
		public SanPham()
		{
			this._ChiTietDonHangs = new EntitySet<ChiTietDonHang>(new Action<ChiTietDonHang>(this.attach_ChiTietDonHangs), new Action<ChiTietDonHang>(this.detach_ChiTietDonHangs));
			this._ChiTietPhieuNhaps = new EntitySet<ChiTietPhieuNhap>(new Action<ChiTietPhieuNhap>(this.attach_ChiTietPhieuNhaps), new Action<ChiTietPhieuNhap>(this.detach_ChiTietPhieuNhaps));
			this._LoaiSP = default(EntityRef<LoaiSP>);
			this._NhaSX = default(EntityRef<NhaSX>);
			this._Gioitinh = default(EntityRef<Gioitinh>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Masp", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Masp
		{
			get
			{
				return this._Masp;
			}
			set
			{
				if ((this._Masp != value))
				{
					this.OnMaspChanging(value);
					this.SendPropertyChanging();
					this._Masp = value;
					this.SendPropertyChanged("Masp");
					this.OnMaspChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tensp", DbType="NVarChar(100)")]
		public string Tensp
		{
			get
			{
				return this._Tensp;
			}
			set
			{
				if ((this._Tensp != value))
				{
					this.OnTenspChanging(value);
					this.SendPropertyChanging();
					this._Tensp = value;
					this.SendPropertyChanged("Tensp");
					this.OnTenspChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Float")]
		public System.Nullable<double> Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mota", DbType="NVarChar(MAX)")]
		public string Mota
		{
			get
			{
				return this._Mota;
			}
			set
			{
				if ((this._Mota != value))
				{
					this.OnMotaChanging(value);
					this.SendPropertyChanging();
					this._Mota = value;
					this.SendPropertyChanged("Mota");
					this.OnMotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Soluong", DbType="Int")]
		public System.Nullable<int> Soluong
		{
			get
			{
				return this._Soluong;
			}
			set
			{
				if ((this._Soluong != value))
				{
					this.OnSoluongChanging(value);
					this.SendPropertyChanging();
					this._Soluong = value;
					this.SendPropertyChanged("Soluong");
					this.OnSoluongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anh", DbType="VarChar(100)")]
		public string Anh
		{
			get
			{
				return this._Anh;
			}
			set
			{
				if ((this._Anh != value))
				{
					this.OnAnhChanging(value);
					this.SendPropertyChanging();
					this._Anh = value;
					this.SendPropertyChanged("Anh");
					this.OnAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaydang", DbType="DateTime")]
		public System.Nullable<System.DateTime> Ngaydang
		{
			get
			{
				return this._Ngaydang;
			}
			set
			{
				if ((this._Ngaydang != value))
				{
					this.OnNgaydangChanging(value);
					this.SendPropertyChanging();
					this._Ngaydang = value;
					this.SendPropertyChanged("Ngaydang");
					this.OnNgaydangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Maloai", DbType="Int NOT NULL")]
		public int Maloai
		{
			get
			{
				return this._Maloai;
			}
			set
			{
				if ((this._Maloai != value))
				{
					if (this._LoaiSP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaloaiChanging(value);
					this.SendPropertyChanging();
					this._Maloai = value;
					this.SendPropertyChanged("Maloai");
					this.OnMaloaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mansx", DbType="Int NOT NULL")]
		public int Mansx
		{
			get
			{
				return this._Mansx;
			}
			set
			{
				if ((this._Mansx != value))
				{
					if (this._NhaSX.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMansxChanging(value);
					this.SendPropertyChanging();
					this._Mansx = value;
					this.SendPropertyChanged("Mansx");
					this.OnMansxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Namnu", DbType="Int")]
		public System.Nullable<int> Namnu
		{
			get
			{
				return this._Namnu;
			}
			set
			{
				if ((this._Namnu != value))
				{
					if (this._Gioitinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNamnuChanging(value);
					this.SendPropertyChanging();
					this._Namnu = value;
					this.SendPropertyChanged("Namnu");
					this.OnNamnuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thanhtoan", DbType="VarChar(MAX)")]
		public string Thanhtoan
		{
			get
			{
				return this._Thanhtoan;
			}
			set
			{
				if ((this._Thanhtoan != value))
				{
					this.OnThanhtoanChanging(value);
					this.SendPropertyChanging();
					this._Thanhtoan = value;
					this.SendPropertyChanged("Thanhtoan");
					this.OnThanhtoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietDonHang", Storage="_ChiTietDonHangs", ThisKey="Masp", OtherKey="Masp")]
		public EntitySet<ChiTietDonHang> ChiTietDonHangs
		{
			get
			{
				return this._ChiTietDonHangs;
			}
			set
			{
				this._ChiTietDonHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietPhieuNhap", Storage="_ChiTietPhieuNhaps", ThisKey="Masp", OtherKey="Masp")]
		public EntitySet<ChiTietPhieuNhap> ChiTietPhieuNhaps
		{
			get
			{
				return this._ChiTietPhieuNhaps;
			}
			set
			{
				this._ChiTietPhieuNhaps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiSP_SanPham", Storage="_LoaiSP", ThisKey="Maloai", OtherKey="Maloai", IsForeignKey=true)]
		public LoaiSP LoaiSP
		{
			get
			{
				return this._LoaiSP.Entity;
			}
			set
			{
				LoaiSP previousValue = this._LoaiSP.Entity;
				if (((previousValue != value) 
							|| (this._LoaiSP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiSP.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._LoaiSP.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._Maloai = value.Maloai;
					}
					else
					{
						this._Maloai = default(int);
					}
					this.SendPropertyChanged("LoaiSP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaSX_SanPham", Storage="_NhaSX", ThisKey="Mansx", OtherKey="Mansx", IsForeignKey=true)]
		public NhaSX NhaSX
		{
			get
			{
				return this._NhaSX.Entity;
			}
			set
			{
				NhaSX previousValue = this._NhaSX.Entity;
				if (((previousValue != value) 
							|| (this._NhaSX.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhaSX.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._NhaSX.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._Mansx = value.Mansx;
					}
					else
					{
						this._Mansx = default(int);
					}
					this.SendPropertyChanged("NhaSX");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gioitinh_SanPham", Storage="_Gioitinh", ThisKey="Namnu", OtherKey="Namnu", IsForeignKey=true)]
		public Gioitinh Gioitinh
		{
			get
			{
				return this._Gioitinh.Entity;
			}
			set
			{
				Gioitinh previousValue = this._Gioitinh.Entity;
				if (((previousValue != value) 
							|| (this._Gioitinh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Gioitinh.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._Gioitinh.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._Namnu = value.Namnu;
					}
					else
					{
						this._Namnu = default(Nullable<int>);
					}
					this.SendPropertyChanged("Gioitinh");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietDonHangs(ChiTietDonHang entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_ChiTietDonHangs(ChiTietDonHang entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_ChiTietPhieuNhaps(ChiTietPhieuNhap entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_ChiTietPhieuNhaps(ChiTietPhieuNhap entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhieuNhap")]
	public partial class PhieuNhap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Mapn;
		
		private System.Nullable<int> _Mansx;
		
		private System.Nullable<System.DateTime> _NgayNhap;
		
		private System.Nullable<bool> _DaXoa;
		
		private EntitySet<ChiTietPhieuNhap> _ChiTietPhieuNhaps;
		
		private EntityRef<NhaSX> _NhaSX;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMapnChanging(int value);
    partial void OnMapnChanged();
    partial void OnMansxChanging(System.Nullable<int> value);
    partial void OnMansxChanged();
    partial void OnNgayNhapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayNhapChanged();
    partial void OnDaXoaChanging(System.Nullable<bool> value);
    partial void OnDaXoaChanged();
    #endregion
		
		public PhieuNhap()
		{
			this._ChiTietPhieuNhaps = new EntitySet<ChiTietPhieuNhap>(new Action<ChiTietPhieuNhap>(this.attach_ChiTietPhieuNhaps), new Action<ChiTietPhieuNhap>(this.detach_ChiTietPhieuNhaps));
			this._NhaSX = default(EntityRef<NhaSX>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mapn", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Mapn
		{
			get
			{
				return this._Mapn;
			}
			set
			{
				if ((this._Mapn != value))
				{
					this.OnMapnChanging(value);
					this.SendPropertyChanging();
					this._Mapn = value;
					this.SendPropertyChanged("Mapn");
					this.OnMapnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mansx", DbType="Int")]
		public System.Nullable<int> Mansx
		{
			get
			{
				return this._Mansx;
			}
			set
			{
				if ((this._Mansx != value))
				{
					if (this._NhaSX.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMansxChanging(value);
					this.SendPropertyChanging();
					this._Mansx = value;
					this.SendPropertyChanged("Mansx");
					this.OnMansxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayNhap", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayNhap
		{
			get
			{
				return this._NgayNhap;
			}
			set
			{
				if ((this._NgayNhap != value))
				{
					this.OnNgayNhapChanging(value);
					this.SendPropertyChanging();
					this._NgayNhap = value;
					this.SendPropertyChanged("NgayNhap");
					this.OnNgayNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaXoa", DbType="Bit")]
		public System.Nullable<bool> DaXoa
		{
			get
			{
				return this._DaXoa;
			}
			set
			{
				if ((this._DaXoa != value))
				{
					this.OnDaXoaChanging(value);
					this.SendPropertyChanging();
					this._DaXoa = value;
					this.SendPropertyChanged("DaXoa");
					this.OnDaXoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuNhap_ChiTietPhieuNhap", Storage="_ChiTietPhieuNhaps", ThisKey="Mapn", OtherKey="Mapn")]
		public EntitySet<ChiTietPhieuNhap> ChiTietPhieuNhaps
		{
			get
			{
				return this._ChiTietPhieuNhaps;
			}
			set
			{
				this._ChiTietPhieuNhaps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaSX_PhieuNhap", Storage="_NhaSX", ThisKey="Mansx", OtherKey="Mansx", IsForeignKey=true)]
		public NhaSX NhaSX
		{
			get
			{
				return this._NhaSX.Entity;
			}
			set
			{
				NhaSX previousValue = this._NhaSX.Entity;
				if (((previousValue != value) 
							|| (this._NhaSX.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhaSX.Entity = null;
						previousValue.PhieuNhaps.Remove(this);
					}
					this._NhaSX.Entity = value;
					if ((value != null))
					{
						value.PhieuNhaps.Add(this);
						this._Mansx = value.Mansx;
					}
					else
					{
						this._Mansx = default(Nullable<int>);
					}
					this.SendPropertyChanged("NhaSX");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietPhieuNhaps(ChiTietPhieuNhap entity)
		{
			this.SendPropertyChanging();
			entity.PhieuNhap = this;
		}
		
		private void detach_ChiTietPhieuNhaps(ChiTietPhieuNhap entity)
		{
			this.SendPropertyChanging();
			entity.PhieuNhap = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietPhieuNhap")]
	public partial class ChiTietPhieuNhap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaChiTietPN;
		
		private System.Nullable<int> _Mapn;
		
		private System.Nullable<int> _Masp;
		
		private System.Nullable<decimal> _DonGiaNhap;
		
		private System.Nullable<int> _SoLuongNhap;
		
		private EntityRef<PhieuNhap> _PhieuNhap;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaChiTietPNChanging(int value);
    partial void OnMaChiTietPNChanged();
    partial void OnMapnChanging(System.Nullable<int> value);
    partial void OnMapnChanged();
    partial void OnMaspChanging(System.Nullable<int> value);
    partial void OnMaspChanged();
    partial void OnDonGiaNhapChanging(System.Nullable<decimal> value);
    partial void OnDonGiaNhapChanged();
    partial void OnSoLuongNhapChanging(System.Nullable<int> value);
    partial void OnSoLuongNhapChanged();
    #endregion
		
		public ChiTietPhieuNhap()
		{
			this._PhieuNhap = default(EntityRef<PhieuNhap>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaChiTietPN", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaChiTietPN
		{
			get
			{
				return this._MaChiTietPN;
			}
			set
			{
				if ((this._MaChiTietPN != value))
				{
					this.OnMaChiTietPNChanging(value);
					this.SendPropertyChanging();
					this._MaChiTietPN = value;
					this.SendPropertyChanged("MaChiTietPN");
					this.OnMaChiTietPNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mapn", DbType="Int")]
		public System.Nullable<int> Mapn
		{
			get
			{
				return this._Mapn;
			}
			set
			{
				if ((this._Mapn != value))
				{
					if (this._PhieuNhap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMapnChanging(value);
					this.SendPropertyChanging();
					this._Mapn = value;
					this.SendPropertyChanged("Mapn");
					this.OnMapnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Masp", DbType="Int")]
		public System.Nullable<int> Masp
		{
			get
			{
				return this._Masp;
			}
			set
			{
				if ((this._Masp != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaspChanging(value);
					this.SendPropertyChanging();
					this._Masp = value;
					this.SendPropertyChanged("Masp");
					this.OnMaspChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGiaNhap", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> DonGiaNhap
		{
			get
			{
				return this._DonGiaNhap;
			}
			set
			{
				if ((this._DonGiaNhap != value))
				{
					this.OnDonGiaNhapChanging(value);
					this.SendPropertyChanging();
					this._DonGiaNhap = value;
					this.SendPropertyChanged("DonGiaNhap");
					this.OnDonGiaNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongNhap", DbType="Int")]
		public System.Nullable<int> SoLuongNhap
		{
			get
			{
				return this._SoLuongNhap;
			}
			set
			{
				if ((this._SoLuongNhap != value))
				{
					this.OnSoLuongNhapChanging(value);
					this.SendPropertyChanging();
					this._SoLuongNhap = value;
					this.SendPropertyChanged("SoLuongNhap");
					this.OnSoLuongNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuNhap_ChiTietPhieuNhap", Storage="_PhieuNhap", ThisKey="Mapn", OtherKey="Mapn", IsForeignKey=true)]
		public PhieuNhap PhieuNhap
		{
			get
			{
				return this._PhieuNhap.Entity;
			}
			set
			{
				PhieuNhap previousValue = this._PhieuNhap.Entity;
				if (((previousValue != value) 
							|| (this._PhieuNhap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhieuNhap.Entity = null;
						previousValue.ChiTietPhieuNhaps.Remove(this);
					}
					this._PhieuNhap.Entity = value;
					if ((value != null))
					{
						value.ChiTietPhieuNhaps.Add(this);
						this._Mapn = value.Mapn;
					}
					else
					{
						this._Mapn = default(Nullable<int>);
					}
					this.SendPropertyChanged("PhieuNhap");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietPhieuNhap", Storage="_SanPham", ThisKey="Masp", OtherKey="Masp", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.ChiTietPhieuNhaps.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.ChiTietPhieuNhaps.Add(this);
						this._Masp = value.Masp;
					}
					else
					{
						this._Masp = default(Nullable<int>);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
